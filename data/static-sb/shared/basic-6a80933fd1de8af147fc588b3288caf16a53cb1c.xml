<xml3d xmlns="http://www.w3.org/1999/xhtml">

	<defs>
	
		<shader id="shader_surface" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">1 1 1</float3>
			<float name="ambientIntensity">0.3686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_building" script="urn:xml3d:shader:diffuse">
			<float3 name="diffuseColor">0.9 0.9 0.9</float3>
			<float name="ambientIntensity">0.5686</float>
			<float name="transparency">0.0</float>
		</shader>
		
		<shader id="shader_silhouette" script="urn:xml3d:shader:matte">
			<float3 name="diffuseColor">1 0.5 0</float3>
		</shader>
	
	</defs>
	
	<data id="mesh_ground">
		<int name="index">0 2 1 1 2 3</int>
		<float3 name="position">
			0.0 0.0 0.0
			1.0 0.0 0.0
			0.0 0.0 1.0
			1.0 0.0 1.0
		</float3>
		<float3 name="normal">
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
			0.0 1.0 0.0
		</float3>
		<float2 name="texcoord">
			0.0 1.0
			1.0 1.0
			0.0 0.0
			1.0 0.0
		</float2>
	</data>
	
	<dataflow id="dataflow_planeXZ" out="position">
		<data compute="position = xflow.planeXZ(contour)">
			<float2 name="contour" param="true"/>
		</data>
	</dataflow>

	<dataflow id="dataflow_extrude" out="position, normal">
		<float2 name="contour" param="true"/>
		<float name="height" param="true"/>
		<compute>
			pos1 = xflow.ensureCCWContour(contour);
			pos2 = xflow.planeXZ(pos1);
			pos3, index = xflow.extrudePolygon(pos2, height);
			position = xflow.deindex(pos3, index);
			normal = xflow.generateFaceNormal(position);
		</compute>
	</dataflow>
	

	<dataflow id="dataflow_extrude_shed" out="position, normal">
		<float2 name="contour" param="true"/>
		<float name="height" param="true"/>
		<int name="indexrotation" param="true"/>
		<float name="roofheight" param="true"/>
		<compute>

			pos0 = xflow.rotateIndex(contour,indexrotation);

			pos1 = xflow.ensureCCWContour(pos0);
			pos2 = xflow.planeXZ(pos1);
			pos3, index = xflow.extrudePolygon(pos2, height);

			pos4= xflow.simpleRoof(pos3,roofheight);

			position = xflow.deindex(pos4, index);
			normal = xflow.generateFaceNormal(position);
		</compute>
	</dataflow>

	<dataflow id="dataflow_extrude_gable" out="position, normal">
		<float2 name="contour" param="true"/>
		<float name="height" param="true"/>
		<int name="splitindices" param="true"/>
		<float name="roofheight" param="true"/>
		<compute>
			
			c2 = xflow.ensureCCWContour(contour);
			
			posa0,posb0 = xflow.splitContour(c2,splitindices);
				
			posa1 = xflow.ensureCCWContour(posa0);
			posb1 = xflow.ensureCCWContour(posb0);
			
			posa2 = xflow.planeXZ(posa1);
			posb2 = xflow.planeXZ(posb1);
			posa3, indexa = xflow.extrudePolygon(posa2, height);
			posb3, indexb = xflow.extrudePolygon(posb2, height);
			posa4= xflow.simpleRoof(posa3,roofheight);
			posb4= xflow.simpleRoof(posb3,roofheight);
			
			pos4,index= xflow.mergeMesh(posa4,indexa,posb4,indexb);
			
			position = xflow.deindex(pos4, index);
			normal = xflow.generateFaceNormal(position);
			
			
			
			
		</compute>
	</dataflow>
	
		<dataflow id="dataflow_extrude_tent" out="position, normal">
		<float2 name="contour" param="true"/>
		<float name="height" param="true"/>
		<float2 name="center" param="true"/>
		<float name="roofheight" param="true"/>
		<compute>
			
			c2 = xflow.ensureCCWContour(contour);
			pos,index = xflow.tentedRoof(c2,center,height,roofheight);
			
			position = xflow.deindex(pos, index);
			normal = xflow.generateFaceNormal(position);
		</compute>
	</dataflow>
	
	

	<dataflow id="dataflow_triangulate" out="position, index">
		<float2 name="contour" param="true"/>
		<float3 name="delta">0 0.1 0</float3>
		<float name="weight">1</float>
		<compute>
			pos = xflow.planeXZ(contour);
			position = xflow.morph(pos, delta, weight);
			index = xflow.triangulatePolygon(position);
		</compute>
	</dataflow>

</xml3d>